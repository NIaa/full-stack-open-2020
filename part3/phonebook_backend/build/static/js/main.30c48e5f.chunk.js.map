{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Person","name","number","id","handleClick","onClick","Persons","persons","filtered","filter","p","toLowerCase","includes","map","Notification","className","message","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","newNotification","setNotification","newClassName","setClassName","useEffect","pbServices","initialPersons","event","target","preventDefault","index","indexOf","window","confirm","updatedPerson","catch","error","setTimeout","returnedPerson","console","log","concat","deletedPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30c48e5f.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Filter = ({newFilter, handleFilterChange}) => {return (\n  <div>\n    filter shown with<input value={newFilter} onChange={handleFilterChange}/>\n  </div>\n  )}\n\nexport default Filter","import React from \"react\"\n\nconst PersonForm = ({addPerson, newName, newNumber, handleNameChange, handleNumberChange}) => {return (\n  <form onSubmit={addPerson}>\n    <div>\n      name: <input value={newName} onChange={handleNameChange}/>\n    </div>\n    <div>\n      number: <input value={newNumber} onChange={handleNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)}\nexport default PersonForm","import React from \"react\"\n\nconst Person = ({name, number, id, handleClick}) => \n  <p>{name} {number} <button onClick={() => handleClick(name, id)}>delete</button></p>\n\nconst Persons = ({persons, newFilter, handleClick}) => { \n  const filtered = persons\n    .filter(p => p.name.toLowerCase().includes(newFilter.toLowerCase()))\n  return (\n  <div>\n    {filtered.map(p => \n      <Person \n        key={p.id} \n        name={p.name} \n        number={p.number} \n        id={p.id} \n        handleClick={handleClick}\n      />)}\n  </div>\n)}\n\nexport default Persons","import React from \"react\"\n\nconst Notification = ({ className, message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request\n}\n\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport pbServices from './services/phonebook'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ newNotification, setNotification ] = useState(null)\n  const [ newClassName, setClassName ] = useState('notification')\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n    const index = persons.map(p => p.name).indexOf(newName)\n    if (index !== -1) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        pbServices.update(persons[index].id, {...persons[index], number: newNumber})\n          .then(updatedPerson => {\n            setPersons(persons.map(p => p.id !== updatedPerson.id ? p : updatedPerson))\n          })\n          .catch(error => {\n            setClassName('error')\n            setNotification(`Information of ${persons[index].name} has already been removed from server`)\n            setPersons(persons.filter(p => p.id !== persons[index].id))            \n            setTimeout(() => {\n              setNotification(null)\n            }, 5000) \n          })\n          return\n      }\n    }\n    const newObject = { \n      name: newName, \n      number: newNumber\n    }\n    pbServices\n      .create(newObject)\n      .then(returnedPerson => {\n        console.log(returnedPerson)\n        setPersons(persons.concat(returnedPerson))\n        setClassName('notification')\n        setNotification(`Added ${newName}`)\n        setNewName('')\n        setNewNumber('')\n         setTimeout(() => {\n          setNotification(null)\n        }, 5000)        \n      })\n      .catch(error => {\n        console.log('error')\n        console.log(error.response.data)\n        setClassName('error')\n        setNotification(error.response.data.error)\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)          \n      })\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setNewFilter(event.target.value)\n  \n  useEffect(() => {\n    pbServices\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleClick = (name, id) => {\n    /* good example for a promise chain */\n    if (window.confirm(`Delete ${name}?`)) {\n      pbServices\n        .deletePerson(id) /* a promise */\n        .then(response => pbServices.getAll())\n        .then(deletedPersons => setPersons(deletedPersons))\n        .catch(error => console.log(error))\n  }}\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification className={newClassName} message={newNotification}/>\n        <Filter newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n      <h2>add a new</h2>\n      <PersonForm \n        addPerson={addPerson} \n        newName={newName} \n        newNumber={newNumber} \n        handleNameChange={handleNameChange} \n        handleNumberChange={handleNumberChange} \n      />\n      <h2>Numbers</h2>\n      <Persons \n        persons={persons} \n        newFilter={newFilter}\n        handleClick={handleClick}\n      />\n    </div>\n  )\n}\n\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}